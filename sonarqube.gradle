apply plugin: 'org.sonarqube'

def sonarProperties = new Properties()
def sonarPropertiesFile = rootProject.file(".configs/sonar.properties")
sonarProperties.load(new FileInputStream(sonarPropertiesFile))

ext {
    SONAR_HOST = sonarProperties['host']
    SONAR_PROJECT_NAME = "DragonflyAndroid"
    SONAR_PROJECT_KEY = "DragonflyAndroid"
    SONAR_PROJECT_VERSION = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))
    SONAR_BINARIES = "/intermediates/classes/debug"
    SONAR_JAVA_BINARIES = "${project.buildDir}/intermediates/classes/debug"
    SONAR_JAVA_TEST_BINARIES = "${project.buildDir}/intermediates/classes/debug"
}

sonarqube() {
    //noinspection GroovyAssignabilityCheck
    properties {
        /* SonarQube needs to be informed about your libraries and the android.jar to understand
         * that methods like onResume() is called by the Android framework. Without that information
         * SonarQube will very likely create warnings that those methods are never used and they
         * should be removed. Same applies for libraries where parent classes
         * are required to understand how a class works and is used.
         */
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-25/android.jar,"

        property "sonar.projectName", SONAR_PROJECT_NAME
        property "sonar.projectKey", SONAR_PROJECT_KEY
        property "sonar.projectVersion", SONAR_PROJECT_VERSION
        property "sonar.sourceEncoding", "UTF-8"

        property "sonar.sources", "./src/main/"
        property "sonar.libraries", libraries
        property "sonar.binaries", SONAR_BINARIES
        property "sonar.java.binaries", SONAR_JAVA_BINARIES
        property "sonar.java.libraries", libraries
        property "sonar.exclusions", "build/**,**/*.png,*.iml, **/*generated*, "

        property "sonar.import_unknown_files", true
        property "sonar.android.lint.report", "./build/outputs/lint-results.xml"
        property "sonar.host.url", SONAR_HOST
        property "sonar.tests", "./src/test/, ./src/androidTest/"
        property "sonar.jacoco.reportPath", fileTree(dir: project.projectDir, includes: ['**/*.exec'])
        property "sonar.java.test.binaries", SONAR_JAVA_TEST_BINARIES
        property "sonar.jacoco.itReportPath", fileTree(dir: project.projectDir, includes: ['**/*.ec'])
        property "sonar.java.test.libraries", libraries

        property "sonar.login", sonarProperties['login']
        property "sonar.password", sonarProperties['password']

    }
}