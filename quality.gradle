repositories {
    jcenter()
}

configurations {
    detekt
}

apply plugin: 'findbugs'
apply plugin: 'pmd'

def configDir = "${project.rootDir}/settings"
def reportsDir = "${project.buildDir}/reports"

task findbugs(type: FindBugs, dependsOn: "assembleDebug") {
    group = "Quality"

    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$configDir/findbugs/findbugs-filter.xml")
    classes = files("${project.buildDir}/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = false
        xml {
            destination "$reportsDir/findbugs/findbugs.xml"
        }
        html {
            destination "$reportsDir/findbugs/findbugs.html"
        }
    }

    classpath = files()
}


task pmd(type: Pmd) {
    group = "Quality"

    ignoreFailures = false
    ruleSetFiles = files("$configDir/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination "$reportsDir/pmd/pmd.xml"
        }
        html {
            destination "$reportsDir/pmd/pmd.html"
        }
    }
}

android {
    lintOptions {
        abortOnError false
        warningsAsErrors true
        xmlReport true
        htmlReport true
        lintConfig file("$configDir/lint/lint.xml")
        htmlOutput file("$reportsDir/lint/lint-results.html")
        xmlOutput file("$reportsDir/lint/lint-results.xml")
    }
}

task ktlint(type: Exec) {
    executable = 'ktlint'
    args = ['src/**/*.kt']
}

task detekt(type: JavaExec) {
    group = "Quality"

    main = "io.gitlab.arturbosch.detekt.cli.Main"
    classpath = configurations.detekt

    def input = "$projectDir"
    def config = "$configDir/detekt/config.yml"
    def filters = ".*test.*;.*androidTest.*"
    def output = "$reportsDir/detekt"
    def params = ['-i', input, '-c', config, '-f', filters, '-o', output]
    args(params)
}

task checkApp {
    group = "Quality"

    dependsOn ':app:findbugs'
    dependsOn ':app:pmd'
    dependsOn ':app:ktlint'
}

task checkLibrary {
    group = "Quality"

    dependsOn ':library:findbugs'
    dependsOn ':library:pmd'
    dependsOn ':library:lint'
}

task checkAll {
    group = "Quality"

    dependsOn 'checkApp'
    dependsOn 'checkLibrary'
}

dependencies {
    detekt 'io.gitlab.arturbosch.detekt:detekt-cli:1.0.0.RC3'
}