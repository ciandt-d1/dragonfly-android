apply plugin: 'findbugs'
apply plugin: 'pmd'

def configDir = "${project.rootDir}/settings"
def reportsDir = "${project.buildDir}/reports"

task findbugs(type: FindBugs, dependsOn: "assembleDebug") {
    group = "Quality"

    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$configDir/findbugs/findbugs-filter.xml")
    classes = files("${project.buildDir}/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = false
        xml {
            destination "$reportsDir/findbugs/findbugs.xml"
        }
        html {
            destination "$reportsDir/findbugs/findbugs.html"
        }
    }

    classpath = files()
}


task pmd(type: Pmd) {
    group = "Quality"

    ignoreFailures = false
    ruleSetFiles = files("$configDir/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination "$reportsDir/pmd/pmd.xml"
        }
        html {
            destination "$reportsDir/pmd/pmd.html"
        }
    }
}

android {
    lintOptions {
        abortOnError false
        warningsAsErrors true
        xmlReport true
        htmlReport true
        lintConfig file("$configDir/lint/lint.xml")
        htmlOutput file("$reportsDir/lint/lint-results.html")
        xmlOutput file("$reportsDir/lint/lint-results.xml")
    }
}

check.dependsOn 'findbugs', 'pmd', 'lint'
